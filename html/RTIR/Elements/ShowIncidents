%# BEGIN LICENSE BLOCK
%# 
%# Copyright (c) 1996-2002 Jesse Vincent <jesse@bestpractical.com>
%# 
%# (Except where explictly superceded by other copyright notices)
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# 
%# Unless otherwise specified, all modifications, corrections or
%# extensions to this work which alter its source code become the
%# property of Best Practical Solutions, LLC when submitted for
%# inclusion in the work.
%# 
%# 
%# END LICENSE BLOCK
% while ( my $incident = $incidents->Next ) {
% $m->out('<ul>') unless $count;
<li>
<a href="<% RT->Config->Get('WebPath') %>/RTIR/Display.html?id=<% $incident->Id %>"><% $incident->Id %>: <% $incident->Subject %></a> <i>( <& /RTIR/Elements/ShowRTIRField, Ticket => $incident, Name => 'State' &> )</i>
% if ( $show_unlink ) {
<a href="<% RT->Config->Get('WebPath') %>/RTIR/Display.html?id=<% $Ticket->Id %>&DeleteLink--MemberOf-<% $incident->Id %>=1">[<% loc('Unlink') %>]</a>
% }
% if ( $depth < 8 ) {
<& /RTIR/Elements/ShowIncidents, Ticket => $incident, depth => ($depth+1) &>
% }
% $count++;
</li>
% }
% $m->out('</ul>') if $count;

% if ( $depth == 1 and $count == 0 ) {
<i><% loc('(no Incidents)') %></i>
% }

% if ( $depth == 1 ) {
%   unless ( $action ) {
<b><a href="<%RT->Config->Get('WebPath')%>/RTIR/Incident/LinkToIncident.html?id=<% $Ticket->Id %>">[Link]</a></b>
<b><a href="<%RT->Config->Get('WebPath')%>/RTIR/Create.html?Child=<% $Ticket->Id %>&Queue=Incidents">[New]</a></b>
%   } elsif ( $action ne 'No' ) {
<a href="<% RT->Config->Get('WebPath') %>/RTIR/Display.html?Action=<% $action %>&id=<% $Ticket->Id %>">[<% loc( $action ) %>]</a>
%   }
% }

<%INIT>

my $count = 0;

my $query = "Queue = 'Incidents' AND HasMember = " . $Ticket->Id . " AND CF.{State} != 'rejected'";
my $incidents = RT::Tickets->new($session{'CurrentUser'});
$incidents->FromSQL($query);

my $action = '';
if ( $Ticket->Owner != $session{'CurrentUser'}->Id ) {
    unless ( $Ticket->CurrentUserHasRight('OwnTicket') ) {
        $action = 'No';
    }
    elsif ( $Ticket->Owner == $RT::Nobody->Id ) {
        $action = 'Take'
            if $Ticket->CurrentUserHasRight('ModifyTicket')
            || $Ticket->CurrentUserHasRight('TakeTicket');
    } else {
        $action = 'Steal'
            if $Ticket->CurrentUserHasRight('ModifyTicket')
            || $Ticket->CurrentUserHasRight('StealTicket');
    }
}

my $show_unlink = !$action;
if ( $show_unlink && $Ticket->QueueObj->Name eq 'Blocks' ) {
    my $query = "Queue = 'Incidents' AND HasMember = " . $Ticket->Id;
    my $incidents = RT::Tickets->new( $session{'CurrentUser'} );
    $incidents->FromSQL( $query );
    $show_unlink = 0 unless $incidents->Count > 1;
}

</%INIT>

<%ARGS>
$Ticket => undef
$depth => 1
</%ARGS>
